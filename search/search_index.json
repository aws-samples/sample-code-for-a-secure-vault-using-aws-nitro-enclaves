{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About the AWS Nitro Enclaves Vault","text":"<p>Welcome to the AWS Nitro Enclaves Vault documentation.</p>"},{"location":"#overview","title":"Overview","text":"<p>This repository contains a sample secure vault solution built using AWS Nitro Enclaves, a feature available exclusively through the AWS Nitro System hypervisor on supported Amazon EC2 instances.</p> <p>A vault solution is useful when you need to ensure sensitive data (such as Protected Health Information (PHI)/Personally Identifiable Information (PII)) is properly secured at rest and can only be decrypted through approved channels.</p> <p>AWS Nitro Enclaves is an Amazon EC2 feature that allows you to create isolated execution environments, called enclaves, from Amazon EC2 instances. Enclaves are separate, hardened, and highly-constrained virtual machines. They provide only secure local socket connectivity with their parent instance. They have no persistent storage, interactive access, or external networking. Users cannot SSH into an enclave, and the data and applications inside the enclave cannot be accessed by the processes, applications, or users (root or admin) of the parent instance.</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li> <p>Flexible Data Model: Additional fields can be supported in the vault by modifying the existing schema.</p> </li> <li> <p>Standardized Security: Implements RFC 9180 Hybrid Public Key Encryption (HPKE) using <code>DHKEM(P-384, HKDF-SHA384)</code> for key encapsulation (KEM), <code>HKDF-SHA384</code> as a key derivation function (KDF), and <code>AES-256-GCM</code> as an authenticated encryption with associated data (AEAD) function. The backing symmetric key is securely stored using the AWS Key Management Service (AWS KMS).</p> </li> </ul>"},{"location":"architecture/","title":"Architecture","text":"<p>This solution has three components:</p> <p></p>"},{"location":"architecture/#api-tier","title":"API Tier","text":"<ul> <li>Amazon API Gateway is the initial entrypoint into the vault. API Gateway supports both private configurations accessible only from within a VPC, or public access by integrating with an authentication solution such as Amazon Cognito (Note: this use case is not supported by this sample).</li> <li>AWS Lambda function written in Python and uses the Powertools for AWS Lambda library to serve the API endpoints. The Lambda function uses Amazon DynamoDB for persistance of metadata and an audit log of vault operations.</li> <li>Amazon DynamoDB table to persist the vault metadata (public key, encrypted secret key, encrypted attributes) and audit log.</li> </ul>"},{"location":"architecture/#decryption-tier","title":"Decryption Tier","text":"<ul> <li>Amazon EC2 instances are launched in an Amazon EC2 Auto Scaling group using launch templates.</li> <li>Network Load Balancer (NLB) is configured to pass-through encrypted TLS (port 443) traffic to the EC2 instances (the NLB is not terminating TLS)</li> <li>NGINX is used as the web server listening on port 443 and terminates TLS connections for the parent application.</li> <li>AWS Certificate Manager and the AWS Certificate Manager for Nitro Enclaves reference application are used to automatically provision certificates for NGINX and secures the private key inside an enclave.</li> <li>Vsock Proxy implements a proxy server that runs on the parent instance and forwards vsock traffic from an enclave to the AWS Key Management Service.</li> <li>Parent Application written in Rust that retrieves IAM credentials from the EC2 instance (using IMDSv2) and forwards the decryption request to the enclave over a vsock connection and then sends the response back to the caller (the Lambda function).</li> </ul>"},{"location":"architecture/#enclave-tier","title":"Enclave Tier","text":"<p>Runs within a Nitro Enclave on an EC2 instance.</p> <ul> <li>kmstool-enclave-cli is used to decrypt the secret key using AWS KMS with the IAM credentials included in the request.</li> <li>Enclave Application written in Rust that decrypts the secret key in the request, then decrypts each encrypted attribute that was provided in the request. Attributes can be transformed using the Common Expression Language (CEL).</li> </ul>"},{"location":"deployment/","title":"Deploying the Solution","text":"<p>The solution is developed using AWS CloudFormation, Python, and Rust.</p>"},{"location":"deployment/#prerequisites","title":"Prerequisites","text":"<ul> <li>You will need an AWS Account.</li> <li>AWS CLI installed and configured to use with your AWS account.</li> <li>Either an IAM User or IAM Identity Center User with the <code>AdministratorAccess</code> policy granted to your user. Not recommended for a production environment.</li> </ul> <p>Info</p> <p>The solution includes a CloudFormation template called deploy_template.yml that will create an IAM role with the necessary permissions to deploy this solution.</p> <p>After deploying the CloudFormation template, you can use an IAM role with the AWS CLI by configuring an additional profile in <code>~/.aws/config</code> such as:</p> <pre><code>[profile nitro-vault]\nrole_arn=arn:aws:iam::123456789012:role/nitro-vault-deployment-rDeploymentRole-XXXXXXXX\nsource_profile=default\nrole_session_name=nitro-vault\n</code></pre> <p>Then in step #2 below, set <code>AWS_PROFILE=nitro-vault</code> to use the new profile.</p>"},{"location":"deployment/#deployment","title":"Deployment","text":"<ol> <li> <p>GitHub: Fork the repository to your personal account. This is required so AWS CodePipeline can access the repository and checkout the source code.</p> <pre><code>git clone https://github.com/&lt;YourGitHubUserName&gt;/sample-code-for-a-secure-vault-using-aws-nitro-enclaves\ncd sample-code-for-a-secure-vault-using-aws-nitro-enclaves\ncp .env.template .env\n</code></pre> </li> <li> <p>Edit the <code>.env</code> file and set these variables:</p> Variable Default Description AWS_PROFILE - The name of the AWS CLI profile with the credentials and options to use. AWS_REGION - The AWS SDK compatible environment variable that specifies the AWS Region to send the request to. HOSTED_ZONE_ID - Amazon Route 53 Hosted Zone ID DOMAIN_NAME - Sub-domain to create in the HOSTED_ZONE_ID for the internal vault API GITHUB_REPO - Personal fork of this repository (ex. aws-samples/sample-code-for-a-secure-vault-using-aws-nitro-enclaves) <p>Info</p> <p>The <code>HOSTED_ZONE_ID</code> and <code>DOMAIN_NAME</code> are required because the solution issues a valid SSL/TLS certificate managed by the AWS Certificate Manager (ACM) for use on the EC2 instances for the Nitro Enclaves. The private key of the certificate is securely managed by ACM for Nitro Enclaves and NGINX. ACM for Nitro Enclaves takes care of automatically rotating the certificate.</p> </li> <li> <p>You must add a new tag to the AWS IAM Principal (either an IAM User or IAM Role) you are using to deploy this solution. If you are using the IAM role created in the <code>deploy_template.yml</code> CloudFormation template, then this step has already been completed for you.</p> <p></p> <p>Create a new tag key called <code>network-perimeter-exception</code> with a value of <code>true</code>.</p> <p>Info</p> <p>This solution implements best practices regarding data perimeters on AWS. To learn more about building a data perimeter, please consult the Building a Data Perimeter on AWS whitepaper.</p> </li> <li> <p>Execute the <code>deploy.sh</code> shell script to begin the deployment.</p> <pre><code>&gt; ./deploy.sh\n\n[!] Deploying nitro-vault-vpc stack...\nWaiting for changeset to be created..\nWaiting for stack create/update to complete\nSuccessfully created/updated stack - nitro-vault-vpc\n\n[!] Deploying nitro-vault-key stack...\nWaiting for changeset to be created..\nWaiting for stack create/update to complete\nSuccessfully created/updated stack - nitro-vault-key\n\n[!] Deploying nitro-vault-ci stack...\nWaiting for changeset to be created..\nWaiting for stack create/update to complete\nSuccessfully created/updated stack - nitro-vault-ci\n\n[!] Updating nitro-vault-key stack with deployed Step Functions role...\nWaiting for changeset to be created..\nWaiting for stack create/update to complete\nSuccessfully created/updated stack - nitro-vault-key\n[?] Do you want to create a new private signing key for AWS Nitro Enclaves? (y/n) y\n\n[+] Updating secret in AWS SecretsManager with private signing key...\n{\n    \"ARN\": \"arn:aws:secretsmanager:us-east-1:123456789012:secret:rSigningSecret-XXXXXXXXX\",\n    \"Name\": \"rSigningSecret-XXXXXXXXX\",\n    \"VersionId\": \"ba6a5637-d579-4811-a1de-XXXXXXXXX\"\n}\n\n[+] Opening AWS Console to complete set up AWS CodeConnections to GitHub...\n[?] Select the radio button next to nitro-vault-ci and then click on \"Update pending connection\"\n[!] Waiting for pipeline to complete...\n\n[!] Pipeline in progress, sleeping 5 seconds...\n[!] Pipeline in progress, sleeping 5 seconds...\n[!] Pipeline in progress, sleeping 5 seconds...\n...\n</code></pre> <p>Attention</p> <p>You must update the pending connection prior to triggering the AWS CodePipeline or else it won't be able to check out the source code from GitHub.</p> <p></p> <p>Select the <code>nitro-vault-ci-&lt;region&gt;</code> AWS CodeConnections connection and click <code>Update pending connection</code> to link it to your GitHub account. After you have succesfully linked your GitHub account, press any key to start the CodePipeline.</p> <pre><code>...\n[!] Pipeline in progress, sleeping 5 seconds...\n[!] Pipeline in progress, sleeping 5 seconds...\n[!] Pipeline in progress, sleeping 5 seconds...\n[+] Pipeline finished successfully.\n[+] Opening Swagger UI at https://xxxxxxx.execute-api.region.amazonaws.com/v1/swagger...\n[+] Done!%\n</code></pre> </li> </ol> <p>The installation script does the following:</p> <ol> <li>Deploys a CloudFormation VPC template to create a VPC with two private subnets across two availability zones (default stack name is <code>nitro-vault-vpc</code>)</li> <li>Deploys a CloudFormation KMS template to create a KMS key (default stack name is <code>nitro-vault-key</code>)</li> <li>Deploys a CloudFormation CI template to create a CodePipeline and four CodeBuild projects to build the various application components and deploy the EC2 instances and API (default stack name is <code>nitro-vault-ci</code>)</li> </ol>"},{"location":"deployment/#post-deployment-guidance","title":"Post Deployment Guidance","text":"<p>Once you have completed the deployment, follow the Post Deployment Guide.</p>"},{"location":"faq/","title":"Frequently Asked Questions","text":"<ol> <li> <p>Does this solution use the AWS Encryption SDK?</p> <p>No. The AWS Encryption SDK currently does not support the Rust programming language which is used by the application running within the Nitro Enclave.</p> </li> <li> <p>Why doesn't this solution provide an encryption context when generating a data key pair from KMS?</p> <p>Providing an encryption context is a best practice but unfortunately the <code>kmstool-enclave-cli</code> tool does not support (GitHub aws-nitro-enclaves-sdk-c#35) providing an encryption context when calling the KMS Decrypt API.</p> <p>Additional authenticated data (AAD) is provided when data is encrypted and decrypted and not referenced with the stored encrypted data.</p> </li> </ol>"},{"location":"post-deployment/","title":"Post Deployment","text":"<p>Follow these steps after completing deployment to create a vault.</p>"},{"location":"post-deployment/#creating-a-vault","title":"Creating a Vault","text":"<p>To create a vault and add some initial data, you can use a script such as:</p> <pre><code>#!/bin/bash\n\nset -euox pipefail\n\nAPI_STACK_NAME=\"nitro-vault-ci-api\"\n\nENDPOINT_URL=$(aws cloudformation describe-stacks --stack-name \"${API_STACK_NAME}\" --query \"Stacks[0].Outputs[?OutputKey=='oApiUrl'].OutputValue\" --output text)\n\ncurl \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"first_name\":\"Test\", \"last_name\":\"User\", \"ssn9\":\"123456789\", \"dob\":\"2000-01-01\"}' \\\n  -v \\\n  \"${ENDPOINT_URL}/vaults\"\n</code></pre> <p>To send an <code>HTTP POST</code> request to the <code>/vaults</code> endpoint.</p> <p>The fields in the request payload must be present and conform to the schema defined in the VaultSchema within the API Python codebase.</p>"},{"location":"post-deployment/#next-steps","title":"Next Steps","text":"<p>Follow the User Guide for how to interact with the vault API.</p>"},{"location":"post-deployment/#clean-up","title":"Clean Up","text":"<p>The uninstall.sh script will remove each CloudFormation Stack and clean up all the resources</p> <pre><code>./uninstall.sh\n</code></pre> <p>You'll need to manually empty and remove the <code>nitro-vault-ci-XXXX</code> S3 bucket for the CodePipeline artifacts.</p>"},{"location":"references/","title":"References","text":"<p>This solution is inspired by these references:</p> <ul> <li>Serverless Tokenization Solution (GitHub Repository)</li> <li>AWS Nitro Enclave Blockchain Wallet (GitHub Repository)</li> <li>A few notes on AWS Nitro Enclaves: Images and attestation (Trail of Bits Blog Post)</li> <li>Application Monitoring with Amazon CloudWatch (AWS Solutions)</li> <li>HPKE: Standardizing public-key encryption (Cloudflare Blog Post)</li> <li>RFC-9180 (RFC Editor)</li> </ul>"},{"location":"security/","title":"Security","text":"<p>This application employs Hybrid Public Key Encryption (HPKE) [RFC-9180] to encrypt data using <code>DHKEM(P-384, HKDF-SHA384), HKDF-SHA384, AES-256-GCM</code>.</p> <ul> <li>Encryption of data is handled by hpke-py in the API.</li> <li>Decryption of data is handled by rustls that uses AWS-LC for cryptographic operations (through aws-lc-rs) in the enclave.</li> </ul> <p></p>"},{"location":"security/#best-practices","title":"Best Practices","text":""},{"location":"security/#data-perimeters","title":"Data Perimeters","text":"<p>This solution implements the recommended practices for resource based policies and VPC endpoint policies to ensure only trusted identities can access the trusted resources from expected networks.</p>"},{"location":"security/#permissions-boundaries","title":"Permissions Boundaries","text":"<p>This solution deploys an IAM permissions boundary policy on all provisioned IAM roles to prevent priviledge escalation if an attacker were able to escalate privileges on the role.</p>"},{"location":"security/#code-signing","title":"Code Signing","text":"<p>All deployed Lambda functions have their code signed with AWS Signer to prevent modifications to the Lambda code after deployment.</p>"},{"location":"security/#dns-firewall","title":"DNS Firewall","text":"<p>An optional Route 53 Resolver DNS Firewall is configured by default to only allow DNS queries to <code>*.amazonaws.com</code> and the domain for the internal Network Load Balancer.</p>"},{"location":"security/#identity-canaries","title":"Identity Canaries","text":"<p>Two additional Lambda functions are deployed, one attached to the same VPC as the API Lambda function, and one not attached to any VPCs, that execute every minute attempting to calling <code>kms:Decrypt</code> against the first encrypted secret key found in DynamoDB. If the KMS key policy is inadvertantly modified to where the KMS Decrypt call succeeds, then a CloudWatch Alarm will be triggered.</p>"},{"location":"security/#threat-model","title":"Threat Model","text":"<p>To view the threat model, you can use threat-composer to load NitroVault_ThreatComposer.json</p>"},{"location":"support/","title":"Support","text":"<p>Best effort support is available through GitHub Issues or by emailing aws-nitro-enclaves-vault-solution@amazon.com.</p>"},{"location":"support/#roadmap","title":"Roadmap","text":"<p>Unordered list of future improvement ideas.</p> <ul> <li>[ ] [api,enclave] Replace the existing hex-encoding encrypted data storage scheme with something else (such as Amazon Ion)</li> </ul>"},{"location":"support/#known-issues","title":"Known Issues","text":"<ol> <li> <p>The KMS template has a CloudFormation parameter called <code>pPrimaryKeyArn</code> that will provision a replica KMS key in another region referencing the primary key. DynamoDB is also configured as a global table to support multi-region workloads. A multi-region configuration hasn't been tested, but should be supported using the chosen services.</p> </li> <li> <p>The CI template has a CloudFormation parameter called <code>pUseCodeBuildFleet</code> that will provision two reserved capacity AWS CodeBuild compute instances for the builds. This will dramatically speed up the <code>BuildVault</code> project as the Docker images will now be cached between runs. CodeBuild Fleets are more expensive than on-demand CodeBuild compute, so they are not enabled by default.</p> </li> <li> <p>The API template has a CloudFormation parameter called <code>pVpcEndpointId</code> that will provision a private api in Amazon API Gateway if VPC Interface Endpoints for API Gateway are provided.</p> </li> </ol>"},{"location":"support/#troubleshooting","title":"Troubleshooting","text":"<ol> <li> <p>Unable to delete <code>nitro-vault-ci-api</code> or <code>nitro-vault-ci-vault</code> CloudFormation stacks due to <code>Role arn:aws:iam::123456789012:role/nitro-vault-ci-rCloudFormationRole-XXXXXXXXX is invalid or cannot be assumed</code></p> <p>This can occur if the <code>nitro-vault-ci</code> stack is deleted first that removes the <code>CloudFormationRole</code> IAM role used by both of these stacks. You can create a new IAM role named the same as the missing role and temporarily grant it to the <code>AdministratorAccess</code> policy to clean up the remaining stacks, then delete the role.</p> </li> <li> <p>API returns \"Unable to decrypt values\" when calling POST /v1/vaults/:vault_id/decrypt</p> <p>First check the CloudWatch Logs for the Lambda function in the <code>/aws/lambda/nitro-vault-ci-api</code> Log Group to see if there are any errors coming from the Lambda function itself. The logs will say whether it received an invalid response from the vault API or not.</p> <p>Next, go to the EC2 console, and connect to the instance using AWS Systems Manager and use <code>sudo</code> to become root by running <code>sudo su -</code>.</p> <ol> <li><code>cat /var/log/user-data.log</code> - this should show a successful execution of the user data script</li> <li><code>ps auwx | grep nginx</code> - should show a running <code>nginx</code> process</li> <li><code>ps auwx | grep parent</code> - should show a running <code>parent</code> process listening on localhost</li> <li><code>journal -xe -u nitro-vault-server -f</code> - should show any logs coming from the parent process.</li> </ol> </li> <li> <p>Resource handler returned message: \"A policy called nitro-vault-ci-boundary already exists. Duplicate names are not allowed.</p> <p>Delete any existing <code>nitro-vault-ci-boundary</code> IAM policies and re-run the <code>nitro-vault-ci</code> CloudFormation stack.</p> </li> </ol>"},{"location":"user-guide/","title":"User Guide","text":""},{"location":"user-guide/#deployment","title":"Deployment","text":"<p>For instructions on deploying the solution, visit the Deployment Guide. Once deployment is complete, check the Post Deployment Guide to create a vault.</p>"},{"location":"user-guide/#interacting-with-vaults","title":"Interacting with Vaults","text":"<p>Swagger UI is available after deployment at <code>https://&lt;API Gateway Endpoint&gt;/v1/swagger</code>.</p> <p>The Nitro Enclaves Vault solution exposes a RESTful API for interacting with vaults aligned to HTTP methods.</p>"},{"location":"user-guide/#create-vault-post-v1vaults","title":"Create vault (<code>POST /v1/vaults</code>)","text":"<p>This endpoint creates a new user vault by calling <code>kms:GenerateDataKeyPairWithoutPlaintext</code> and using the returned public key to encrypt the optional payload data.</p>"},{"location":"user-guide/#sample-request","title":"Sample Request","text":"<pre><code>POST /v1/vaults HTTP/1.1\nContent-Type: application/json\nContent-Length: 81\n\n{\n  \"first_name\": \"Test\",\n  \"last_name\": \"User\",\n  \"ssn9\": \"123456789\",\n  \"dob\": \"2020-01-01\"\n}\n</code></pre>"},{"location":"user-guide/#sample-response","title":"Sample Response","text":"<pre><code>HTTP/1.1 200 OK\nDate: Tue, 09 Apr 2024 17:18:17 GMT\nContent-Type: application/json\nContent-Length: 37\nCache-Control: no-cache, no-store, must-revalidate\nX-Content-Type-Options: nosniff\nExpires: 0\nPragma: no-cache\n\n{\"id\":\"v_01HV1XW70Q03PHK892JFQAY0Z5\"}\n</code></pre>"},{"location":"user-guide/#get-user-vault-get-v1vaultsvault_id","title":"Get user vault (<code>GET /v1/vaults/&lt;vault_id&gt;</code>)","text":"<p>This endpoint returns whether attributes are included within the vault or not.</p>"},{"location":"user-guide/#sample-request_1","title":"Sample Request","text":"<pre><code>GET /v1/vaults/&lt;vault_id&gt;?fields=first_name,last_name,email,middle_name,ssn9,ssn4,dob HTTP/1.1\n</code></pre>"},{"location":"user-guide/#sample-response_1","title":"Sample Response","text":"<pre><code>HTTP/1.1 200 OK\nDate: Tue, 09 Apr 2024 18:06:11 GMT\nContent-Type: application/json\nContent-Length: 105\nCache-Control: no-cache, no-store, must-revalidate\nX-Content-Type-Options: nosniff\nExpires: 0\nPragma: no-cache\n\n{\"first_name\":true,\"last_name\":true,\"email\":false,\"middle_name\":false,\"ssn9\":true,\"ssn4\":true,\"dob\":true}\n</code></pre>"},{"location":"user-guide/#update-vault-patch-v1vaultsvault_id","title":"Update vault (<code>PATCH /v1/vaults/&lt;vault_id</code>&gt;)","text":"<p>This endpoint will overwrite existing attributes contained within the vault. This endpoint returns an empty response.</p>"},{"location":"user-guide/#sample-request_2","title":"Sample Request","text":"<pre><code>PATCH /v1/vaults/&lt;vault_id&gt; HTTP/1.1\nContent-Type: application/json\nContent-Length: 82\n\n{\n  \"first_name\": \"Test\",\n  \"last_name\": \"User\",\n  \"ssn9\": \"123456789\",\n  \"dob\": \"2022-01-01\"\n}\n</code></pre>"},{"location":"user-guide/#sample-response_2","title":"Sample Response","text":"<pre><code>HTTP/1.1 200 OK\nDate: Tue, 09 Apr 2024 18:36:30 GMT\nContent-Type: application/json\nContent-Length: 2\nCache-Control: no-cache, no-store, must-revalidate\nX-Content-Type-Options: nosniff\nExpires: 0\nPragma: no-cache\n\n{}\n</code></pre>"},{"location":"user-guide/#delete-vault-delete-v1vaultsvault_id","title":"Delete vault (<code>DELETE /v1/vaults/&lt;vault_id&gt;</code>)","text":"<p>This endpoint will delete specific attributes or the entire user vault. This endpoint returns an empty response.</p>"},{"location":"user-guide/#sample-request-specific-attributes","title":"Sample Request (specific attributes)","text":"<pre><code>DELETE /v1/vaults/&lt;vault_id&gt; HTTP/1.1\nContent-Type: application/json\nContent-Length: 20\n\n{\n  \"fields\": [\"ssn9\"]\n}\n</code></pre>"},{"location":"user-guide/#sample-response-specific-attributes","title":"Sample Response (specific attributes)","text":"<pre><code>HTTP/1.1 200 OK\nDate: Tue, 09 Apr 2024 18:36:30 GMT\nContent-Type: application/json\nContent-Length: 2\nCache-Control: no-cache, no-store, must-revalidate\nX-Content-Type-Options: nosniff\nExpires: 0\nPragma: no-cache\n\n{}\n</code></pre>"},{"location":"user-guide/#sample-request-all-attributes","title":"Sample Request (all attributes)","text":"<pre><code>DELETE /v1/vaults/&lt;vault_id&gt; HTTP/1.1\nContent-Type: application/json\nContent-Length: 20\n\n{\n  \"delete_all\": true\n}\n</code></pre>"},{"location":"user-guide/#sample-response-all-attributes","title":"Sample Response  (all attributes)","text":"<pre><code>HTTP/1.1 200 OK\nDate: Tue, 09 Apr 2024 18:36:30 GMT\nContent-Type: application/json\nContent-Length: 2\nCache-Control: no-cache, no-store, must-revalidate\nX-Content-Type-Options: nosniff\nExpires: 0\nPragma: no-cache\n\n{}\n</code></pre>"},{"location":"user-guide/#decrypt-user-vault-post-v1vaultsvault_iddecrypt","title":"Decrypt user vault (<code>POST /v1/vaults/&lt;vault_id&gt;/decrypt</code>)","text":"<p>This endpoint communicates with the internal Network Load Balancer endpoint to decrypt attributes securely from within the Nitro Enclaves. The API supports three attributes in the request:</p> <ul> <li><code>fields</code>: an array of string attributes to decrypt</li> <li><code>reason</code>: a string reason for the decrypt request that gets logged</li> <li><code>expressions</code>: a object of Common Expression Language (CEL) expressions to execute against the decrypted attributes (more details below)</li> </ul>"},{"location":"user-guide/#sample-request_3","title":"Sample Request","text":"<pre><code>POST /v1/vaults/&lt;vault_id&gt;/decrypt\nContent-Type: application/json\nContent-Length: 116\n\n{\n  \"fields\": [\n    \"first_name\",\n    \"last_name\",\n    \"dob\",\n    \"ssn4\"\n  ],\n  \"reason\": \"user validation\",\n  \"expressions\": {\n    \"age\": \"date(dob).age()\"\n  }\n}\n</code></pre>"},{"location":"user-guide/#sample-response_3","title":"Sample Response","text":"<pre><code>HTTP/1.1 200 OK\nDate: Tue, 09 Apr 2024 20:46:52 GMT\nContent-Type: application/json\nContent-Length: 82\nCache-Control: no-cache, no-store, must-revalidate\nX-Content-Type-Options: nosniff\nExpires: 0\nPragma: no-cache\n\n{\"age\":37,\"dob\":\"1986-01-01\",\"first_name\":\"Test\",\"last_name\":\"User\",\"ssn4\":\"6789\"}\n</code></pre>"},{"location":"user-guide/#cel-expressions","title":"CEL Expressions","text":"<p>The Decrypt API supports the following expressions functions through the Common Expression Language (CEL).</p> <p>Common Expression Language (CEL) is a general-purpose expression language designed to be fast, portable, and safe to execute. You can use CEL on its own or embed it into a larger product. CEL is a great fit for a wide variety applications, from routing remote procedure calls (RPCs) to defining security policies. CEL is extensible, platform independent, and optimized for compile-once/evaluate-many workflows.</p>"},{"location":"user-guide/#contains","title":"contains","text":"<p>Returns true if the target contains the provided argument. The actual behavior depends mainly on the type of the target.</p> <pre><code>[1, 2, 3].contains(1) == true\n{\"a\": 1, \"b\": 2, \"c\": 3}.contains(\"a\") == true\n\"abc\".contains(\"b\") == true\nb\"abc\".contains(b\"c\") == true\n</code></pre>"},{"location":"user-guide/#size","title":"size","text":"<p>Calculates the size of either the target, or the provided arguments depending on how the function is called. If called as a method, the target will be used. If called as a function, the first argument will be used.</p> <pre><code>size([1, 2, 3]) == 3\n</code></pre>"},{"location":"user-guide/#has","title":"has","text":"<p>Returns true if the provided argument can be resolved. This function is useful for checking if a property exists on a type before attempting to resolve it. Resolving a property that does not exist will result in a [<code>ExecutionError::NoSuchKey</code>] error.</p> <pre><code>has(foo.bar.baz)\n</code></pre>"},{"location":"user-guide/#map","title":"map","text":"<p>Maps the provided list to a new list by applying an expression to each input item.</p> <pre><code>[1, 2, 3].map(x, x * 2) == [2, 4, 6]\n</code></pre>"},{"location":"user-guide/#filter","title":"filter","text":"<p>Filters the provided list by applying an expression to each input item and including the input item in the resulting list, only if the expression returned true.</p> <pre><code>[1, 2, 3].filter(x, x &gt; 1) == [2, 3]\n</code></pre>"},{"location":"user-guide/#all","title":"all","text":"<p>Returns a boolean value indicating whether every value in the provided list or map met the predicate defined by the provided expression. If called on a map, the predicate is applied to the map keys.</p> <pre><code>[1, 2, 3].all(x, x &gt; 0) == true\n[{1:true, 2:true, 3:false}].all(x, x &gt; 0) == true\n</code></pre>"},{"location":"user-guide/#max","title":"max","text":"<p>Returns the maximum value from a list or arguments.</p> <pre><code>max([1, 2, 3]) == 3\n</code></pre>"},{"location":"user-guide/#startswith","title":"startsWith","text":"<p>Returns true if a string starts with another string.</p> <pre><code>\"abc\".startsWith(\"a\") == true\n</code></pre>"},{"location":"user-guide/#duration","title":"duration","text":"<p>Duration parses the provided argument into a [<code>Value::Duration</code>] value. The argument must be string, and must be in the format of a duration.</p> <ul> <li><code>1h</code> parses as 1 hour</li> <li><code>1.5h</code> parses as 1 hour and 30 minutes</li> <li><code>1h30m</code> parses as 1 hour and 30 minutes</li> <li><code>1h30m1s</code> parses as 1 hour, 30 minutes, and 1 second</li> <li><code>1ms</code> parses as 1 millisecond</li> <li><code>1.5ms</code> parses as 1 millisecond and 500 microseconds</li> <li><code>1ns</code> parses as 1 nanosecond</li> <li><code>1.5ns</code> parses as 1 nanosecond (sub-nanosecond durations not supported)</li> </ul>"},{"location":"user-guide/#timestamp","title":"timestamp","text":"<p>Timestamp parses the provided argument into a [<code>Value::Timestamp</code>] value.</p> <pre><code>timestamp(\"2024-04-09T18:58:44Z\")\n</code></pre>"},{"location":"user-guide/#string","title":"string","text":"<p>Performs a type conversion on the target. The following conversions are currently supported:</p> <ul> <li><code>string</code> - Returns a copy of the target string.</li> <li><code>timestamp</code> - Returns the timestamp in RFC3339 format.</li> <li><code>duration</code> - Returns the duration in a string formatted like \"72h3m0.5s\".</li> <li><code>int</code> - Returns the integer value of the target.</li> <li><code>uint</code> - Returns the unsigned integer value of the target.</li> <li><code>float</code> - Returns the float value of the target.</li> <li><code>bytes</code> - Converts bytes to string using from_utf8_lossy.</li> </ul> <pre><code>string(\"1.2\") == 1.2\n</code></pre>"},{"location":"user-guide/#double","title":"double","text":"<p>Performs a type conversion on the target.</p> <pre><code>double(\"1.2\") == 1.2\n</code></pre>"},{"location":"user-guide/#exists","title":"exists","text":"<p>Returns a boolean value indicating whether a or more values in the provided list or map meet the predicate defined by the provided expression. If called on a map, the predicate is applied to the map keys.</p> <pre><code>[1, 2, 3].exists(x, x &gt; 0) == true\n[{1:true, 2:true, 3:false}].exists(x, x &gt; 0) == true\n</code></pre>"},{"location":"user-guide/#exists_one","title":"exists_one","text":"<p>Returns a boolean value indicating whether only one value in the provided list or map meets the predicate defined by the provided expression. If called on a map, the predicate is applied to the map keys.</p> <pre><code>[1, 2, 3].exists_one(x, x &gt; 0) == false\n[1, 2, 3].exists_one(x, x == 1) == true\n[{1:true, 2:true, 3:false}].exists_one(x, x &gt; 0) == false\n</code></pre>"},{"location":"user-guide/#int","title":"int","text":"<p>Performs a type conversion on the target.</p> <pre><code>int(\"1\") == 1\n</code></pre>"},{"location":"user-guide/#uint","title":"uint","text":"<p>Performs a type conversion on the target.</p> <pre><code>uint(\"1\") == 1\n</code></pre>"},{"location":"user-guide/#is_empty","title":"is_empty","text":"<p>Returns true if the string is empty.</p> <pre><code>\"test\".is_empty() == false\n\"\".is_empty() == true\n</code></pre>"},{"location":"user-guide/#to_lowercase","title":"to_lowercase","text":"<p>Returns a lowercase string.</p> <pre><code>\"TEST\".to_lowercase() == \"test\"\n</code></pre>"},{"location":"user-guide/#to_uppercase","title":"to_uppercase","text":"<p>Returns an uppercase string.</p> <pre><code>\"test\".to_uppercase() == \"TEST\"\n</code></pre>"},{"location":"user-guide/#hmac_sha256","title":"hmac_sha256","text":"<p>Computes a SHA256 hash of the value.</p> <pre><code>\"test\".hmac_sha256() == \"9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08\"\n</code></pre>"},{"location":"user-guide/#hmac_sha384","title":"hmac_sha384","text":"<p>Computes a SHA384 hash of the value.</p> <pre><code>\"test\".hmac_sha384() == \"768412320f7b0aa5812fce428dc4706b3cae50e02a64caa16a782249bfe8efc4b7ef1ccb126255d196047dfedf17a0a9\"\n</code></pre>"},{"location":"user-guide/#hmac_sha512","title":"hmac_sha512","text":"<p>Computes a SHA512 hash of the value.</p> <pre><code>\"test\".hmac_sha512() == \"ee26b0dd4af7e749aa1a8ee3c10ae9923f618980772e473f8819a5d4940e0db27ac185f8a0e1d5f84f88bc887fd67b143732c304cc5fa9ad8e6f57f50028a8ff\"\n</code></pre>"},{"location":"user-guide/#hex_encode","title":"hex_encode","text":"<p>Encodes a string as hexidecimal.</p> <pre><code>\"test\".hex_encode() == \"74657374\"\n</code></pre>"},{"location":"user-guide/#hex_decode","title":"hex_decode","text":"<p>Decodes a hexidecimal string.</p> <pre><code>\"74657374\".hex_decode() == \"test\"\n</code></pre>"},{"location":"user-guide/#base64_encode","title":"base64_encode","text":"<p>Base64 encodes a string.</p> <pre><code>\"test\".base64_encode() == \"dGVzdA==\"\n</code></pre>"},{"location":"user-guide/#base64_decode","title":"base64_decode","text":"<p>Base64 decodes a string.</p> <pre><code>\"dGVzdA==\".base64_decode() == \"test\"\n</code></pre>"},{"location":"user-guide/#date","title":"date","text":"<p>Converts a string into an internal date representation.</p> <pre><code>date(\"2024-04-09\") == \"2024-04-09T00:00:00Z\"\n</code></pre>"},{"location":"user-guide/#today_utc","title":"today_utc","text":"<p>Returns today's date in UTC.</p> <pre><code>today_utc() == \"2024-04-09T00:00:00Z\"\n</code></pre>"},{"location":"user-guide/#age","title":"age","text":"<p>Returns the number of years from a given date.</p> <pre><code>date(\"1986-12-11\").age() == 37\n</code></pre>"}]}